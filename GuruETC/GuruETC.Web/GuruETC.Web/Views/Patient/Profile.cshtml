@model GuruETC.Web.Models.PatientModel

@{
    ViewBag.Title = "Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div><a onclick="chtoggle();" href="javascript:void(0);" style="float:right;">Change Password </a></div>
<div id="changepassword" style="display:none;">

<div class="password_div"><span class="password_field">Current Password:</span>
<input style="width:150px;" type="text" id="currentpass" /></div>

<div class="password_div"><span class="password_field">New Password:</span>
<input style="width:150px;" type="text" id="newpass" /></div>
<div class="password_div"><span class="password_field">Confirm Password:</span>
<input style="width:150px;" type="text" id="confirmpass" /></div>
<div class="password_div">
<span class="password_error"></span>
<a style="float:right; margin: 0 6px 0 0;" onclick="changepass();" id="upPassword" href="javascript:void(0);">OK</a>
</div>
</div>


<h2>Profile</h2>


@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
     <section id="loginForm">
    <fieldset>
        <legend>Registeruser</legend>

        <div class="editor-label">
        @Html.LabelFor(model => model.UserName)  @Html.DisplayFor(model => model.UserName)
          
        </div>
        <div class="editor-field">
     
            @Html.HiddenFor(model => model.UserName)
            @Html.ValidationMessageFor(model => model.UserName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Address1)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Address1)
            @Html.ValidationMessageFor(model => model.Address1)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Address2)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Address2)
            @Html.ValidationMessageFor(model => model.Address2)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PhoneNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PhoneNumber)
            @Html.ValidationMessageFor(model => model.PhoneNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DOB)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DOB)
            @Html.ValidationMessageFor(model => model.DOB)
        </div>
        </fieldset>
         </section>
    <section class="social" id="socialLoginForm">
        <div class="editor-label">
            @Html.LabelFor(model => model.MedicalHistory)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.MedicalHistory)
            @Html.ValidationMessageFor(model => model.MedicalHistory)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PatientHistorical)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.PatientHistorical)
            @Html.ValidationMessageFor(model => model.PatientHistorical)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PersonalMotivator)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.PersonalMotivator)
            @Html.ValidationMessageFor(model => model.PersonalMotivator)
        </div>
          <div class="editor-label">
         .
          </div>
        </section>
        
        <p>
            <input type="submit" onclick="upfirst();" value="Update" />
        </p>
        <p>
            <input type="button" onclick="goBack();" value="Cancel" />
        </p>
    
}


<script>
    $(function () {
        $('#DOB').datepicker({
            changeMonth: true,
            changeYear: true,
            yearRange: '1950:2013',
            dateFormat: 'mm/dd/yy'
        });
    });

    function chtoggle() {
        $('#changepassword').slideToggle(800);
    }

    function upfirst() {
        $('.main-content').css('background', '#F7F7F7');
    }

    function changepass() {
        var cPass = $('#currentpass').val();
        cPass = $.trim(cPass);
        var nPass = $('#newpass').val();
        nPass = $.trim(nPass);
        var cnfPass = $('#confirmpass').val();
        cnfPass = $.trim(cnfPass);
        if (cPass != '') {
            if (nPass != cnfPass) {
                $('.password_error').html('not match!');
                return false;
            }
            $('.password_error').html('');

            var obj = {
                old: cPass,
                nepass: nPass
            };

            var json = JSON.stringify(obj);

            $.ajax({
                url: '/Patient/ChangePassword',
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: json,
                success: function (msg) {
                    $('.password_error').html(msg);
                    $('#currentpass').val('');
                    $('#newpass').val('');
                    $('#confirmpass').val('');
                }
            });


        }
        else {
            $('.password_error').html('fill password!');
        }

    }

    function goBack() {
        $('.main-content').css('background', '#F7F7F7');
        window.location.href = "/Patient/ShowProfile";
    }

</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
